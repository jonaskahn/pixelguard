[project]
name = "pixelguard"
version = "0.1.0"
description = "A sophisticated image analysis tool that detects problematic images with advanced color analysis and border detection."
authors = [
    { name = "Jonas Kahn", email = "me@ifelse.one" }
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "opencv-python>=4.12.0,<5.0.0",
    "rich>=14.1.0,<15.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "click>=8.0.0,<9.0.0",
    "sanic>=25.3.0,<26.0.0",
    "sanic-cors>=2.2.0,<3.0.0",
    "aiohttp>=3.12.15,<4.0.0",
    "aiodns>=3.5.0,<4.0.0",
    "streamlit>=1.47.1,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "sanic-ext>=23.12.0,<24.0.0",
    "python-dotenv (>=1.1.1,<2.0.0)"
]

[tool.poetry]
packages = [{ include = "pixelguard", from = "src" }]


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.25.0"
black = "^25.1.0"
watchdog = "^6.0.0"
sanic-testing = "^24.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/pixelguard",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
asyncio_mode = "auto"

